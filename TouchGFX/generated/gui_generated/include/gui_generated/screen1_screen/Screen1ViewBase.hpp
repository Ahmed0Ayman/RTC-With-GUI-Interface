/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/containers/clock/AnalogClock.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void SetClock()
    {
        // Override and implement this function in Screen1
    }

    virtual void SetAlarm()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage1;
    touchgfx::AnalogClock analogClock1;
    touchgfx::ButtonWithIcon buttonconfiguration;
    touchgfx::TextArea textAreaAlarm;
    touchgfx::TextAreaWithTwoWildcards textAreaAlarmNum;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREAALARMNUMBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaAlarmNumBuffer1[TEXTAREAALARMNUMBUFFER1_SIZE];
    static const uint16_t TEXTAREAALARMNUMBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaAlarmNumBuffer2[TEXTAREAALARMNUMBUFFER2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN1VIEWBASE_HPP
