/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen3ViewBase::Screen3ViewBase() :
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_WEATHER_BACKGROUND_1_ID));
    tiledImage1.setPosition(0, 0, 240, 320);
    tiledImage1.setOffset(0, 0);

    toggleButtonHour.setXY(0, 71);
    toggleButtonHour.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));

    toggleButtonMinute.setXY(0, 140);
    toggleButtonMinute.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));

    buttonHome.setXY(0, 260);
    buttonHome.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonHome.setLabelText(touchgfx::TypedText(T_SINGLEUSEID13));
    buttonHome.setLabelColor(touchgfx::Color::getColorFromRGB(0, 255, 183));
    buttonHome.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonHome.setAction(buttonCallback);

    buttonSetAlarm.setXY(90, 260);
    buttonSetAlarm.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonSetAlarm.setLabelText(touchgfx::TypedText(T_SINGLEUSEID14));
    buttonSetAlarm.setLabelColor(touchgfx::Color::getColorFromRGB(255, 0, 251));
    buttonSetAlarm.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonSetAlarm.setAction(buttonCallback);

    textArea1.setXY(75, 155);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID15));

    textArea3.setXY(90, 86);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID17));

    textAreaHour.setXY(175, 77);
    textAreaHour.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaHour.setLinespacing(0);
    Unicode::snprintf(textAreaHourBuffer, TEXTAREAHOUR_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID19).getText());
    textAreaHour.setWildcard(textAreaHourBuffer);
    textAreaHour.resizeToCurrentText();
    textAreaHour.setTypedText(touchgfx::TypedText(T_SINGLEUSEID18));

    textAreaMinute.setXY(175, 140);
    textAreaMinute.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaMinute.setLinespacing(0);
    Unicode::snprintf(textAreaMinuteBuffer, TEXTAREAMINUTE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID21).getText());
    textAreaMinute.setWildcard(textAreaMinuteBuffer);
    textAreaMinute.resizeToCurrentText();
    textAreaMinute.setTypedText(touchgfx::TypedText(T_SINGLEUSEID20));

    buttonIncrease.setXY(180, 200);
    buttonIncrease.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID));
    buttonIncrease.setIconXY(22, 15);
    buttonIncrease.setAction(buttonCallback);

    buttonDecrease.setXY(90, 200);
    buttonDecrease.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
    buttonDecrease.setIconXY(22, 15);
    buttonDecrease.setAction(buttonCallback);

    buttonPrev.setXY(180, 260);
    buttonPrev.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonPrev.setLabelText(touchgfx::TypedText(T_SINGLEUSEID24));
    buttonPrev.setLabelColor(touchgfx::Color::getColorFromRGB(0, 255, 213));
    buttonPrev.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonPrev.setAction(buttonCallback);

    textArea3_1.setXY(74, 31);
    textArea3_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3_1.setLinespacing(0);
    textArea3_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID25));

    add(__background);
    add(tiledImage1);
    add(toggleButtonHour);
    add(toggleButtonMinute);
    add(buttonHome);
    add(buttonSetAlarm);
    add(textArea1);
    add(textArea3);
    add(textAreaHour);
    add(textAreaMinute);
    add(buttonIncrease);
    add(buttonDecrease);
    add(buttonPrev);
    add(textArea3_1);
}

void Screen3ViewBase::setupScreen()
{

    //Interaction5
    //When screen transition begins call virtual function
    //Call ClearAlarmVar
    ClearAlarmVar();

}

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonHome)
    {
        //Interaction1
        //When buttonHome clicked change screen to Screen1
        //Go to Screen1 with block transition
        application().gotoScreen1ScreenBlockTransition();
    }
    else if (&src == &buttonSetAlarm)
    {
        //Interaction6
        //When buttonSetAlarm clicked change screen to Screen2
        //Go to Screen2 with block transition
        application().gotoScreen2ScreenBlockTransition();

        //Interaction7
        //When buttonSetAlarm clicked call virtual function
        //Call SetAlarmVal
        SetAlarmVal();
    }
    else if (&src == &buttonIncrease)
    {
        //Interaction3
        //When buttonIncrease clicked call virtual function
        //Call IncreaseValueAlarmFun
        IncreaseValueAlarmFun();
    }
    else if (&src == &buttonDecrease)
    {
        //Interaction4
        //When buttonDecrease clicked call virtual function
        //Call DecreaseValueAlarmFun
        DecreaseValueAlarmFun();
    }
    else if (&src == &buttonPrev)
    {
        //Interaction2
        //When buttonPrev clicked change screen to Screen2
        //Go to Screen2 with block transition
        application().gotoScreen2ScreenBlockTransition();
    }
}
