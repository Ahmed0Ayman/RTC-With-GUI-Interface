/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_WEATHER_BACKGROUND_3_ID));
    tiledImage1.setPosition(0, 0, 240, 320);
    tiledImage1.setOffset(0, 0);

    analogClock1.setXY(0, 0);
    analogClock1.setBackground(BITMAP_BLUE_CLOCKS_BACKGROUNDS_CLOCK_CLASSIC_BACKGROUND_ID, 116, 116);
    analogClock1.setupSecondHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_CLASSIC_SECOND_HAND_ID, 4, 79);
    analogClock1.setupMinuteHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_CLASSIC_MINUTE_HAND_ID, 2, 64);
    analogClock1.setMinuteHandSecondCorrection(false);
    analogClock1.setupHourHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_CLASSIC_HOUR_HAND_ID, 2, 44);
    analogClock1.setHourHandMinuteCorrection(false);
    analogClock1.initializeTime24Hour(10, 10, 0);
    analogClock1.setAnimation(10, touchgfx::EasingEquations::cubicEaseInOut);

    buttonconfiguration.setXY(0, 260);
    buttonconfiguration.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_SETTINGS_32_ID));
    buttonconfiguration.setIconXY(15, 15);
    buttonconfiguration.setAction(buttonCallback);

    textAreaAlarm.setXY(114, 240);
    textAreaAlarm.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaAlarm.setLinespacing(0);
    textAreaAlarm.setTypedText(touchgfx::TypedText(T_SINGLEUSEID26));

    textAreaAlarmNum.setXY(114, 271);
    textAreaAlarmNum.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaAlarmNum.setLinespacing(0);
    touchgfx::Unicode::snprintf(textAreaAlarmNumBuffer1, TEXTAREAALARMNUMBUFFER1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID28).getText());
    textAreaAlarmNum.setWildcard1(textAreaAlarmNumBuffer1);
    touchgfx::Unicode::snprintf(textAreaAlarmNumBuffer2, TEXTAREAALARMNUMBUFFER2_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID29).getText());
    textAreaAlarmNum.setWildcard2(textAreaAlarmNumBuffer2);
    textAreaAlarmNum.resizeToCurrentText();
    textAreaAlarmNum.setTypedText(touchgfx::TypedText(T_SINGLEUSEID27));

    add(__background);
    add(tiledImage1);
    add(analogClock1);
    add(buttonconfiguration);
    add(textAreaAlarm);
    add(textAreaAlarmNum);
}

void Screen1ViewBase::setupScreen()
{

    //Interaction2
    //When screen transition begins call virtual function
    //Call SetClock
    SetClock();

    //Interaction3
    //When screen transition begins call virtual function
    //Call SetAlarm
    SetAlarm();

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonconfiguration)
    {
        //Interaction1
        //When buttonconfiguration clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
}
